<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AspNet.Security.OpenIdConnect.Extensions</name>
    </assembly>
    <members>
        <member name="T:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions">
            <summary>
            Provides extension methods to make <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>
            easier to work with, specially in server-side scenarios.
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsNoneFlow(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_type" parameter corresponds to the "none" response type.
            See http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#none
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsAuthorizationCodeFlow(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_type" parameter
            corresponds to the authorization code flow.
            See http://tools.ietf.org/html/rfc6749#section-4.1.1
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsImplicitFlow(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_type" parameter
            corresponds to the implicit flow.
            See http://tools.ietf.org/html/rfc6749#section-4.2.1 and
            http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsHybridFlow(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_type" parameter
            corresponds to the hybrid flow.
            See http://tools.ietf.org/html/rfc6749#section-4.2.1 and
            http://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsFragmentResponseMode(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_mode" parameter is "fragment" or if
            fragment is the default mode for the response_type received.
            See http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsQueryResponseMode(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_mode" parameter is "query" or if
            query is the default mode for the response_type received.
            See http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsFormPostResponseMode(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True if the "response_mode" parameter is "form_post".
            See http://openid.net/specs/oauth-v2-form-post-response-mode-1_0.html
            </summary>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsAuthorizationCodeGrantType(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True when the "grant_type" is "authorization_code".
            See also http://tools.ietf.org/html/rfc6749#section-4.1.3
            </summary>    
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsClientCredentialsGrantType(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True when the "grant_type" is "client_credentials".
            See also http://tools.ietf.org/html/rfc6749#section-4.4.2
            </summary>  
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsRefreshTokenGrantType(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True when the "grant_type" is "refresh_token".
            See also http://tools.ietf.org/html/rfc6749#section-6
            </summary>    
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsPasswordGrantType(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            True when the "grant_type" is "password".
            See also http://tools.ietf.org/html/rfc6749#section-4.3.2
            </summary>    
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.ContainsResponseType(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.String)">
            <summary>
            Determines whether the response_type exposed by the
            <paramref name="message"/> contains the given <paramref name="component"/> or not.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
            <param name="component">The component to look for in the parameter.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.ContainsScope(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.String)">
            <summary>
            Determines whether the scope exposed by the <paramref name="message"/>
            contains the given <paramref name="component"/> or not.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
            <param name="component">The component to look for in the parameter.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.HasComponent(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.Func{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.String},System.String)">
            <summary>
            Determines whether the <paramref name="parameter"/> exposed by the
            <paramref name="message"/> contains the given <paramref name="component"/> or not.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
            <param name="parameter">The parameter to search in.</param>
            <param name="component">The component to look for in the parameter.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetUniqueIdentifier(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Extracts the unique identifier associated with an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetToken(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Gets the token parameter from an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetTokenTypeHint(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Gets the token type hint from an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetAudiences(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Extracts the audiences from an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetResources(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Extracts the resources from an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetScopes(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)">
            <summary>
            Extracts the scopes from an <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetToken(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.String)">
            <summary>
            Sets the token for a message.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
            <param name="token">The token to store in the OpenID Connect message.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetTokenTypeHint(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.String)">
            <summary>
            Sets the token type hint for a message.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
            <param name="hint">The hint given for the token type hint.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetUniqueIdentifier(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage,System.String)">
            <summary>
            Adds a unique identifier to a given <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage"/> instance.</param>
            <param name="identifier">The unique identifier.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.HasDestination(System.Security.Claims.Claim)">
            <summary>
            Determines whether the given claim contains a destination.
            </summary>
            <param name="claim">The <see cref="T:System.Security.Claims.Claim"/> instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.HasDestination(System.Security.Claims.Claim,System.String)">
            <summary>
            Determines whether the given claim
            contains the required destination.
            </summary>
            <param name="claim">The <see cref="T:System.Security.Claims.Claim"/> instance.</param>
            <param name="value">The required destination.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.WithDestination(System.Security.Claims.Claim,System.String)">
            <summary>
            Adds a specific destination to a claim.
            </summary>
            <param name="claim">The <see cref="T:System.Security.Claims.Claim"/> instance.</param>
            <param name="value">The destination.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.Clone(System.Security.Claims.ClaimsIdentity,System.Func{System.Security.Claims.Claim,System.Boolean})">
            <summary>
            Clones an identity by filtering its claims and the claims of its actor, recursively.
            </summary>
            <param name="identity">The <see cref="T:System.Security.Claims.ClaimsIdentity"/> instance to filter.</param>
            <param name="filter">
            The delegate filtering the claims: return <c>true</c>
            to accept the claim, <c>false</c> to remove it.
            </param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.Clone(System.Security.Claims.ClaimsPrincipal,System.Func{System.Security.Claims.Claim,System.Boolean})">
            <summary>
            Clones a principal by filtering its identities.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> instance to filter.</param>
            <param name="filter">
            The delegate filtering the claims: return <c>true</c>
            to accept the claim, <c>false</c> to remove it.
            </param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.AddClaim(System.Security.Claims.ClaimsIdentity,System.String,System.String)">
            <summary>
            Adds a claim to a given identity.
            </summary>
            <param name="identity">The identity.</param>
            <param name="type">The type associated with the claim.</param>
            <param name="value">The value associated with the claim.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.AddClaim(System.Security.Claims.ClaimsIdentity,System.String,System.String,System.String)">
            <summary>
            Adds a claim to a given identity.
            </summary>
            <param name="identity">The identity.</param>
            <param name="type">The type associated with the claim.</param>
            <param name="value">The value associated with the claim.</param>
            <param name="destination">The destination associated with the claim.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetClaim(System.Security.Claims.ClaimsIdentity,System.String)">
            <summary>
            Gets the claim value corresponding to the given type.
            </summary>
            <param name="identity">The identity.</param>
            <param name="type">The type associated with the claim.</param>
            <returns>The claim value.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetClaim(System.Security.Claims.ClaimsPrincipal,System.String)">
            <summary>
            Gets the claim value corresponding to the given type.
            </summary>
            <param name="principal">The principal.</param>
            <param name="type">The type associated with the claim.</param>
            <returns>The claim value.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.Copy(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Copies the authentication properties in a new instance.
            </summary>
            <param name="properties">The authentication properties to copy.</param>
            <returns>A new instance containing the copied properties.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.Copy(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Copies the authentication ticket in a new instance.
            </summary>
            <param name="ticket">The authentication ticket to copy.</param>
            <returns>A new instance containing the copied ticket</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.CopyTo(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Copies the authentication properties to another instance.
            </summary>
            <param name="source">The source instance.</param>
            <param name="destination">The destination instance.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetProperty(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Gets a given property from the authentication properties.
            </summary>
            <param name="properties">The authentication properties.</param>
            <param name="property">The specific property to look for.</param>
            <returns>The value corresponding to the property, or <c>null</c> if the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetProperty(Microsoft.AspNet.Authentication.AuthenticationTicket,System.String)">
            <summary>
            Gets a given property from the authentication ticket.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <param name="property">The specific property to look for.</param>
            <returns>The value corresponding to the property, or <c>null</c> if the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetAudiences(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets the audiences list stored in the authentication properties.
            Note: this method automatically excludes duplicate audiences.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns>The audiences list or <c>Enumerable.Empty</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetAudiences(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets the audiences list stored in the authentication ticket.
            Note: this method automatically excludes duplicate audiences.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns>The audiences list or <c>Enumerable.Empty</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetNonce(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets the nonce stored in the authentication properties.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns>The nonce or <c>null</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetNonce(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets the nonce stored in the authentication ticket.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns>The nonce or <c>null</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetResources(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets the resources list stored in the authentication properties.
            Note: this method automatically excludes duplicate resources.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns>The resources list or <c>Enumerable.Empty</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetResources(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets the resources list stored in the authentication ticket.
            Note: this method automatically excludes duplicate resources.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns>The resources list or <c>Enumerable.Empty</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetScopes(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets the scopes list stored in the authentication properties.
            Note: this method automatically excludes duplicate scopes.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns>The scopes list or <c>Enumerable.Empty</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetScopes(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets the scopes list stored in the authentication ticket.
            Note: this method automatically excludes duplicate scopes.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns>The scopes list or <c>Enumerable.Empty</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetUsage(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets the usage of the token stored in the authentication properties.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns>The usage of the token or <c>null</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.GetUsage(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets the usage of the token stored in the authentication ticket.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns>The usage of the token or <c>null</c> is the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsConfidential(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets a boolean value indicating whether
            the ticket is marked as confidential.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns><c>true</c> if the ticket is confidential, or <c>false</c> if it's not.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsConfidential(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets a boolean value indicating whether
            the ticket is marked as confidential.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns><c>true</c> if the ticket is confidential, or <c>false</c> if it's not.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsAuthorizationCode(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets a boolean value indicating whether
            the properties corresponds to an authorization code.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns><c>true</c> if the properties corresponds to an authorization code.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsAuthorizationCode(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets a boolean value indicating whether the
            authentication ticket corresponds to an access token.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns><c>true</c> if the ticket corresponds to an authorization code.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsAccessToken(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets a boolean value indicating whether
            the properties corresponds to an access token.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns><c>true</c> if the properties corresponds to an access token.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsAccessToken(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets a boolean value indicating whether the
            authentication ticket corresponds to an access token.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns><c>true</c> if the ticket corresponds to an access token.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsIdentityToken(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets a boolean value indicating whether
            the properties corresponds to an identity token.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns><c>true</c> if the properties corresponds to an identity token.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsIdentityToken(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets a boolean value indicating whether the
            authentication ticket corresponds to an identity token.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns><c>true</c> if the ticket corresponds to an identity token.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsRefreshToken(Microsoft.AspNet.Http.Authentication.AuthenticationProperties)">
            <summary>
            Gets a boolean value indicating whether
            the properties corresponds to a refresh token.
            </summary>
            <param name="properties">The authentication properties.</param>
            <returns><c>true</c> if the properties corresponds to a refresh token.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.IsRefreshToken(Microsoft.AspNet.Authentication.AuthenticationTicket)">
            <summary>
            Gets a boolean value indicating whether the
            authentication ticket corresponds to a refresh token.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <returns><c>true</c> if the ticket corresponds to a refresh token.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetAudiences(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the audiences list in the authentication properties.
            Note: this method automatically excludes duplicate audiences.
            </summary>
            <param name="properties">The authentication properties where the list should be stored.</param>
            <param name="audiences">The audiences to store.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetAudiences(Microsoft.AspNet.Authentication.AuthenticationTicket,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the audiences list in the authentication ticket.
            Note: this method automatically excludes duplicate audiences.
            </summary>
            <param name="ticket">The authentication properties where the list should be stored.</param>
            <param name="audiences">The audiences to store.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetResources(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the resources list in the authentication properties.
            </summary>
            <param name="properties">The authentication properties.</param>
            <param name="resources">The resources to store.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetResources(Microsoft.AspNet.Authentication.AuthenticationTicket,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the resources list in the authentication ticket.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <param name="resources">The resources to store.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetScopes(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the scopes list in the authentication properties.
            </summary>
            <param name="properties">The authentication properties.</param>
            <param name="scopes">The scopes to store.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetScopes(Microsoft.AspNet.Authentication.AuthenticationTicket,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the resources list in the authentication ticket.
            </summary>
            <param name="ticket">The authentication ticket.</param>
            <param name="scopes">The scopes to store.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetUsage(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Sets the usage of the token in the authentication properties.
            </summary>
            <param name="properties">The authentication properties where the usage should be stored.</param>
            <param name="usage">The usage of the token.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.SetUsage(Microsoft.AspNet.Authentication.AuthenticationTicket,System.String)">
            <summary>
            Sets the usage of the token in the authentication ticket.
            </summary>
            <param name="ticket">The authentication ticket where the usage should be stored.</param>
            <param name="usage">The usage of the token.</param>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.ContainsProperty(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Determines whether the authentication properties contains the given property.
            </summary>
            <param name="properties">The authentication properties the property should be extracted from.</param>
            <param name="property">The property to look for.</param>
            <returns><c>true</c> if the property exists or <c>false</c> if the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.ContainsProperty(Microsoft.AspNet.Authentication.AuthenticationTicket,System.String)">
            <summary>
            Determines whether the authentication ticket contains the given property.
            </summary>
            <param name="ticket">The authentication ticket the property should be extracted from.</param>
            <param name="property">The property to look for.</param>
            <returns><c>true</c> if the property exists or <c>false</c> if the property cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.ContainsScope(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Determines whether the authentication properties contains the given scope.
            </summary>
            <param name="ticket">The authentication properties the scope should be extracted from.</param>
            <param name="scope">The scope to look for.</param>
            <returns><c>true</c> if the scope exists or <c>false</c> if the scope cannot be found.</returns>
        </member>
        <member name="M:AspNet.Security.OpenIdConnect.Extensions.OpenIdConnectExtensions.ContainsScope(Microsoft.AspNet.Authentication.AuthenticationTicket,System.String)">
            <summary>
            Determines whether the authentication ticket contains the given scope.
            </summary>
            <param name="ticket">The authentication ticket the scope should be extracted from.</param>
            <param name="scope">The scope to look for.</param>
            <returns><c>true</c> if the scope exists or <c>false</c> if the scope cannot be found.</returns>
        </member>
    </members>
</doc>
